# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Compile all java files with junit
      - name: Compile and Build Project
        run: |
          cd Projects 
          cd P3
          javac -d ./out -cp "src/" src/*.java

  run_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Compile all java files with junit
      - name: Compile and Build Project
        run: |
          cd Projects 
          cd P3
          mv tests/* .
          mv src/*.java .
          echo "compiling java src files"
          javac -cp "junit-4.10.jar:." *.java

      - name: Run TestPacManGhostInRange
        run: |
          cd Projects
          cd P3
          echo "running TestPacManGhostInRange test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestGhostInRange

      - name: Run TestGhostValidMoves
        run: |
          cd Projects
          cd P3
          echo "running TestGhostValidMoves test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestGhostValidMoves

      - name: Run TestMapAttack
        run: |
          cd Projects
          cd P3
          echo "running TestMapAttack test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestMapAttack

      - name: Run TestPacManInRange
        run: |
          cd Projects
          cd P3
          echo "running test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestPacManInRange

      - name: Run TestMapGetLoc
        run: |
          cd Projects
          cd P3
          echo "running test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestMapGetLoc

      - name: Run TestPacManValidMoves
        run: |
          cd Projects
          cd P3
          echo "running test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestPacManValidMoves
          
          
      - name: Run TestMapMove
        run: |
          cd Projects
          cd P3
          echo "running TestMapMove test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestMapMove
          
          
      - name: Run TestPacManMove
        run: |
          cd Projects
          cd P3
          echo "running TestPacManMove test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestPacManMove
          
          
      - name: Run TestGhostMove
        run: |
          cd Projects
          cd P3
          echo "running TestGhostMove test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestGhostMove

      - name: Run TestConsume
        run: |
          cd Projects
          cd P3
          echo "running TestConsume test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestConsume

      - name: Run TestAttack
        run: |
          cd Projects
          cd P3
          echo "running TestAttack test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestAttack


      - name: Run TestMapEatCookie
        run: |
          cd Projects
          cd P3
          echo "running TestMapEatCookie test"
          java -cp "junit-4.10.jar:." org.junit.runner.JUnitCore TestMapEatCookie
